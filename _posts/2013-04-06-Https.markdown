---
layout: post
title: HTTPS
category: 笔迹
tags: Tech
description: HTTPS

---

![](https://raw.githubusercontent.com/Ashtray/Ashtray.github.io/master/imag/%E4%B8%9C%E9%82%AA%E8%A5%BF%E6%AF%92.jpg)  

###HTTPS 

HTTPS(Hypertext Transfer Protocol Secure)安全超文本传输协议

<!-- more -->

它是由`Netscape`开发并内置于其浏览器中，用于对数据进行压缩和解压操作，并返回网络上传送回的结果。  

HTTPS实际上应用了Netscape的完全套接字层(SSl)作为HTTP应用层的子层。  
(HTTPS使用端口443，而不是象HTTP那样使用端口80来和TCP/IP进行通信。)  
SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。  
HTTPS和SSL支持使用X.509数字认证，如果需要的话用户可以确认发送者是谁。  

	https是以安全为目标的HTTP通道，简单讲是HTTP的安全版。 
 
即HTTP下加入SSL层，https的安全基础是SSL，因此加密的详细内容请看SSL。 它是一个URI scheme(抽象标识符体系)，句法类同http:体系。  
用于安全的HTTP数据传输。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层(在HTTP与TCP之间)。  
这个系统的最初研发由网景公司进行，提供了身份验证与加密通讯方法，它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。  

---------

总结：  

为了保证敏感信息在传输过程中的安全性，需要对它们加密；为了协商密钥，人们制定了SSL协议。  
SSL协议的一个基础是RSA公钥体系。  
用户可以使用机构发布的公钥加密信息，机构使用公钥对应的私钥解密（这只是简化的说法，RSA只用于SSL的起始，真正的加解密还是使用协商后的对称密钥）。  

为了使得用户相信并使用自己的公钥，网站需要证明自己的身份，也即向用户展示一份证书。  
网站不能自证，因此需要第三方机构，也即CA。CA是作为公理一样的存在，它们负责收费并验证网站的正身。  
网站向CA提交自身的信息以及自己的公钥，CA验证成功之后，用自己的私钥给网站的证书加密，发还给网站。  

------

可问题是：  
  
	用户如何使用这些证书来验证网站的真实性？

--------------------

[个人主页](http://Ashtray.github.io)

----------

	「你还是一个人吗」  
	「难道我回变成一条狗吗」  

>`「汪汪汪」`

-----------------
    
 
